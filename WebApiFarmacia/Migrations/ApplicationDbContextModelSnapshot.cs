// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiFarmacia;

#nullable disable

namespace WebApiFarmacia.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApiFarmacia.Entidades.Laboratorio", b =>
                {
                    b.Property<int>("LaboratorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LaboratorioId"));

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LaboratorioId");

                    b.ToTable("Laboratorio");
                });

            modelBuilder.Entity("WebApiFarmacia.Entidades.Medicamento", b =>
                {
                    b.Property<int>("MedicamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicamentoId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCaducidad")
                        .HasColumnType("datetime2");

                    b.Property<int>("LaboratorioId")
                        .HasColumnType("int");

                    b.Property<int>("ModoAdministracionId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.HasKey("MedicamentoId");

                    b.HasIndex("LaboratorioId");

                    b.HasIndex("ModoAdministracionId");

                    b.ToTable("Medicamento");
                });

            modelBuilder.Entity("WebApiFarmacia.Entidades.ModoAdministracion", b =>
                {
                    b.Property<int>("ModoAdministracionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModoAdministracionId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModoAdministracionId");

                    b.ToTable("ModoAdministracion");
                });

            modelBuilder.Entity("WebApiFarmacia.Entidades.Trabajador", b =>
                {
                    b.Property<int>("TrabajadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrabajadorId"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RFC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrabajadorId");

                    b.ToTable("Trabajador");
                });

            modelBuilder.Entity("WebApiFarmacia.Entidades.Venta", b =>
                {
                    b.Property<int>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VentaId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("MedicamentoId")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<int>("TrabajadorId")
                        .HasColumnType("int");

                    b.HasKey("VentaId");

                    b.HasIndex("MedicamentoId");

                    b.HasIndex("TrabajadorId");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("WebApiFarmacia.Entidades.Medicamento", b =>
                {
                    b.HasOne("WebApiFarmacia.Entidades.Laboratorio", "Laboratorio")
                        .WithMany("Medicamentos")
                        .HasForeignKey("LaboratorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiFarmacia.Entidades.ModoAdministracion", "ModoAdministracion")
                        .WithMany("Medicamentos")
                        .HasForeignKey("ModoAdministracionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratorio");

                    b.Navigation("ModoAdministracion");
                });

            modelBuilder.Entity("WebApiFarmacia.Entidades.Venta", b =>
                {
                    b.HasOne("WebApiFarmacia.Entidades.Medicamento", "Medicamento")
                        .WithMany("Ventas")
                        .HasForeignKey("MedicamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiFarmacia.Entidades.Trabajador", "Trabajador")
                        .WithMany("Venta")
                        .HasForeignKey("TrabajadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicamento");

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("WebApiFarmacia.Entidades.Laboratorio", b =>
                {
                    b.Navigation("Medicamentos");
                });

            modelBuilder.Entity("WebApiFarmacia.Entidades.Medicamento", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("WebApiFarmacia.Entidades.ModoAdministracion", b =>
                {
                    b.Navigation("Medicamentos");
                });

            modelBuilder.Entity("WebApiFarmacia.Entidades.Trabajador", b =>
                {
                    b.Navigation("Venta");
                });
#pragma warning restore 612, 618
        }
    }
}
